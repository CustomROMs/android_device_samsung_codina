From 7b77b21ae568f4a27b80571471f14d4d1ebd5bad Mon Sep 17 00:00:00 2001
From: Shilin Victor <radicaldreamer00001@gmail.com>
Date: Fri, 29 Mar 2019 22:52:39 +0300
Subject: [PATCH] packages-services-Telecomm_Low-incall-volume.patch

Change-Id: Id84a51916649fc6a59ece1d225c2bf93e9f73a3f
---
 .../android/server/telecom/CallAudioManager.java   | 23 ++++++++++++++++++++++
 src/com/android/server/telecom/CallsManager.java   |  4 ++++
 .../server/telecom/ProximitySensorManager.java     |  2 ++
 3 files changed, 29 insertions(+)

diff --git a/src/com/android/server/telecom/CallAudioManager.java b/src/com/android/server/telecom/CallAudioManager.java
index 32d70f33..ca94a190 100644
--- a/src/com/android/server/telecom/CallAudioManager.java
+++ b/src/com/android/server/telecom/CallAudioManager.java
@@ -596,6 +596,7 @@ final class CallAudioManager extends CallsManagerListenerBase
                 // DISCONNECTED. When the call eventually transitions to the next state, audio
                 // focus will be correctly abandoned by the if clause above.
             }
+            resetAudioStreamVolume();
         }
 
         boolean isVoiceCall = mAudioFocusStreamType == AudioManager.STREAM_VOICE_CALL;
@@ -737,6 +738,7 @@ final class CallAudioManager extends CallsManagerListenerBase
         Call call = mCallsManager.getForegroundCall();
         if (call != null && call.getConnectionService() != null) {
             call.getConnectionService().onCallAudioStateChanged(call, mCallAudioState);
+            resetAudioStreamVolume();
         }
     }
 
@@ -841,6 +843,27 @@ final class CallAudioManager extends CallsManagerListenerBase
         }
     }
 
+    /* Fix low in call volume */
+    public void resetAudioStreamVolume() {
+        // determine actual streamType
+        AudioManager audioManager = (AudioManager) mContext.getSystemService(Context.AUDIO_SERVICE);
+        int streamType = AudioManager.STREAM_VOICE_CALL;
+        if (mBluetoothManager.isBluetoothAudioConnectedOrPending()) {
+            streamType = AudioManager.STREAM_BLUETOOTH_SCO;
+        }
+        // determine volume and 1 level lower volume (lowest level can be 0)
+        int volume = audioManager.getStreamVolume(streamType);
+        int lowerVolume = volume - 1;
+        if (lowerVolume < 0) {
+            lowerVolume = 0;
+        }
+        Log.i(this,"resetAudioStreamVolume (streamType=" + streamType + ", streamVolume=" + volume + ")...");
+        // It's important to change it to another volume before restoring the original volume,
+        // otherwise the volume change will NOT be triggered!!
+        audioManager.setStreamVolume(streamType, lowerVolume, 0);
+        audioManager.setStreamVolume(streamType, volume, 0);
+    }
+
     /**
      * Dumps the state of the {@link CallAudioManager}.
      *
diff --git a/src/com/android/server/telecom/CallsManager.java b/src/com/android/server/telecom/CallsManager.java
index 3b4d0e2d..18895ffb 100644
--- a/src/com/android/server/telecom/CallsManager.java
+++ b/src/com/android/server/telecom/CallsManager.java
@@ -537,6 +537,10 @@ public class CallsManager extends Call.ListenerBase implements VideoProviderProx
         return mCallAudioManager.getCallAudioState();
     }
 
+    void resetAudioStreamVolume() {
+        mCallAudioManager.resetAudioStreamVolume();
+    }
+
     boolean isTtySupported() {
         return mTtyManager.isTtySupported();
     }
diff --git a/src/com/android/server/telecom/ProximitySensorManager.java b/src/com/android/server/telecom/ProximitySensorManager.java
index 5fddb89b..3712e4e1 100644
--- a/src/com/android/server/telecom/ProximitySensorManager.java
+++ b/src/com/android/server/telecom/ProximitySensorManager.java
@@ -66,6 +66,8 @@ public class ProximitySensorManager extends CallsManagerListenerBase {
         if (!mProximityWakeLock.isHeld()) {
             Log.i(this, "Acquiring proximity wake lock");
             mProximityWakeLock.acquire();
+            // Reset audio stream volume when call is off hook
+            mCallsManager.resetAudioStreamVolume();
         } else {
             Log.i(this, "Proximity wake lock already acquired");
         }
-- 
2.11.0

