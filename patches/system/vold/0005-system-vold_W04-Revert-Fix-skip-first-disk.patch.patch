From 1e7ed8242d0a5cba5fd10e630cb9b41f78958abe Mon Sep 17 00:00:00 2001
From: Shilin Victor <radicaldreamer00001@gmail.com>
Date: Fri, 29 Mar 2019 22:55:05 +0300
Subject: [PATCH 5/9] system-vold_W04-Revert-Fix-skip-first-disk.patch

Change-Id: Id6832749b4ad62ff859d9a996c1480f759be1413
---
 Disk.cpp | 52 ++--------------------------------------------------
 Disk.h   |  2 --
 2 files changed, 2 insertions(+), 52 deletions(-)

diff --git a/Disk.cpp b/Disk.cpp
index 357342b..4678364 100644
--- a/Disk.cpp
+++ b/Disk.cpp
@@ -83,7 +83,7 @@ enum class Table {
 Disk::Disk(const std::string& eventPath, dev_t device,
         const std::string& nickname, int flags) :
         mDevice(device), mSize(-1), mNickname(nickname), mFlags(flags), mCreated(
-                false), mJustPartitioned(false), mSkipChange(false) {
+                false), mJustPartitioned(false) {
     mId = StringPrintf("disk:%u_%u", major(device), minor(device));
     mEventPath = eventPath;
     mSysPath = StringPrintf("/sys/%s", eventPath.c_str());
@@ -192,11 +192,6 @@ void Disk::destroyAllVolumes() {
 }
 
 status_t Disk::readMetadata() {
-
-    if (mSkipChange) {
-        return OK;
-    }
-
     mSize = -1;
     mLabel.clear();
 
@@ -259,12 +254,6 @@ status_t Disk::readPartitions() {
         return -ENOTSUP;
     }
 
-    if (mSkipChange) {
-        mSkipChange = false;
-        LOG(INFO) << "Skip first change";
-        return OK;
-    }
-
     destroyAllVolumes();
 
     // Parse partition table
@@ -424,45 +413,8 @@ status_t Disk::partitionMixed(int8_t ratio) {
     destroyAllVolumes();
     mJustPartitioned = true;
 
-    // Determine if we're coming from MBR
-    std::vector<std::string> cmd;
-    cmd.push_back(kSgdiskPath);
-    cmd.push_back("--android-dump");
-    cmd.push_back(mDevPath);
-
-    std::vector<std::string> output;
-    res = ForkExecvp(cmd, output);
-    if (res != OK) {
-        LOG(WARNING) << "sgdisk failed to scan " << mDevPath;
-        mJustPartitioned = false;
-        return res;
-    }
-
-    Table table = Table::kUnknown;
-    for (auto line : output) {
-        char* cline = (char*) line.c_str();
-        char* token = strtok(cline, kSgdiskToken);
-        if (token == nullptr) continue;
-
-        if (!strcmp(token, "DISK")) {
-            const char* type = strtok(nullptr, kSgdiskToken);
-            if (!strcmp(type, "mbr")) {
-                table = Table::kMbr;
-                break;
-            } else if (!strcmp(type, "gpt")) {
-                table = Table::kGpt;
-                break;
-            }
-        }
-    }
-
-    if (table == Table::kMbr) {
-        LOG(INFO) << "skip first disk change event due to MBR -> GPT switch";
-        mSkipChange = true;
-    }
-
     // First nuke any existing partition table
-    cmd.clear();
+    std::vector<std::string> cmd;
     cmd.push_back(kSgdiskPath);
     cmd.push_back("--zap-all");
     cmd.push_back(mDevPath);
diff --git a/Disk.h b/Disk.h
index 20f5522..a334069 100644
--- a/Disk.h
+++ b/Disk.h
@@ -109,8 +109,6 @@ protected:
     bool mCreated;
     /* Flag that we just partitioned and should format all volumes */
     bool mJustPartitioned;
-    /* Flag that we need to skip first disk change events after partitioning*/
-    bool mSkipChange;
 
     void createPublicVolume(dev_t device,
                     const std::string& fstype = "",
-- 
2.11.0

