From aada54451e6a109b251e2ed245faa7e5a9772588 Mon Sep 17 00:00:00 2001
From: Shilin Victor <radicaldreamer00001@gmail.com>
Date: Fri, 29 Mar 2019 22:55:05 +0300
Subject: [PATCH 3/9] system-vold_W02-Fix-Reverent-selinux-vold.patch

Change-Id: I61a824af33f1f59cf5dcf4a9e0d603794cb2d7f5
---
 Loop.cpp          | 14 --------------
 Utils.cpp         | 36 ------------------------------------
 VolumeManager.cpp |  5 -----
 main.cpp          |  5 -----
 4 files changed, 60 deletions(-)

diff --git a/Loop.cpp b/Loop.cpp
index 8872d7a..6111904 100644
--- a/Loop.cpp
+++ b/Loop.cpp
@@ -145,28 +145,14 @@ int Loop::create(const char *id, const char *loopFile, char *loopDeviceBuffer, s
         mode_t mode = 0660 | S_IFBLK;
         unsigned int dev = (0xff & i) | ((i << 12) & 0xfff00000) | (7 << 8);
 
-        if (sehandle) {
-            rc = selabel_lookup(sehandle, &secontext, filename, S_IFBLK);
-            if (rc == 0)
-                setfscreatecon(secontext);
-        }
-
         if (mknod(filename, mode, dev) < 0) {
             if (errno != EEXIST) {
                 int sverrno = errno;
                 SLOGE("Error creating loop device node (%s)", strerror(errno));
-                if (secontext) {
-                    freecon(secontext);
-                    setfscreatecon(NULL);
-                }
                 errno = sverrno;
                 return -1;
             }
         }
-        if (secontext) {
-            freecon(secontext);
-            setfscreatecon(NULL);
-        }
 
         if ((fd = open(filename, O_RDWR | O_CLOEXEC)) < 0) {
             SLOGE("Unable to open %s (%s)", filename, strerror(errno));
diff --git a/Utils.cpp b/Utils.cpp
index 9fed80e..9d7842a 100644
--- a/Utils.cpp
+++ b/Utils.cpp
@@ -69,11 +69,6 @@ status_t CreateDeviceNode(const std::string& path, dev_t dev) {
     status_t res = 0;
 
     char* secontext = nullptr;
-    if (sehandle) {
-        if (!selabel_lookup(sehandle, &secontext, cpath, S_IFBLK)) {
-            setfscreatecon(secontext);
-        }
-    }
 
     mode_t mode = 0660 | S_IFBLK;
     if (mknod(cpath, mode, dev) < 0) {
@@ -84,11 +79,6 @@ status_t CreateDeviceNode(const std::string& path, dev_t dev) {
         }
     }
 
-    if (secontext) {
-        setfscreatecon(nullptr);
-        freecon(secontext);
-    }
-
     return res;
 }
 
@@ -105,19 +95,9 @@ status_t PrepareDir(const std::string& path, mode_t mode, uid_t uid, gid_t gid)
     const char* cpath = path.c_str();
 
     char* secontext = nullptr;
-    if (sehandle) {
-        if (!selabel_lookup(sehandle, &secontext, cpath, S_IFDIR)) {
-            setfscreatecon(secontext);
-        }
-    }
 
     int res = fs_prepare_dir(cpath, mode, uid, gid);
 
-    if (secontext) {
-        setfscreatecon(nullptr);
-        freecon(secontext);
-    }
-
     if (res == 0) {
         return OK;
     } else {
@@ -282,15 +262,7 @@ status_t ForkExecvp(const std::vector<std::string>& args, security_context_t con
         }
     }
 
-    if (setexeccon(context)) {
-        LOG(ERROR) << "Failed to setexeccon";
-        abort();
-    }
     status_t res = android_fork_execvp(argc, argv, NULL, false, true);
-    if (setexeccon(nullptr)) {
-        LOG(ERROR) << "Failed to setexeccon";
-        abort();
-    }
 
     free(argv);
     return res;
@@ -314,15 +286,7 @@ status_t ForkExecvp(const std::vector<std::string>& args,
     }
     output.clear();
 
-    if (setexeccon(context)) {
-        LOG(ERROR) << "Failed to setexeccon";
-        abort();
-    }
     FILE* fp = popen(cmd.c_str(), "r");
-    if (setexeccon(nullptr)) {
-        LOG(ERROR) << "Failed to setexeccon";
-        abort();
-    }
 
     if (!fp) {
         PLOG(ERROR) << "Failed to popen " << cmd;
diff --git a/VolumeManager.cpp b/VolumeManager.cpp
index 2f623ef..ccfcff5 100755
--- a/VolumeManager.cpp
+++ b/VolumeManager.cpp
@@ -683,11 +683,6 @@ int VolumeManager::unmountAll() {
     }
     endmntent(fp);
 
-    for (auto path : toUnmount) {
-        SLOGW("Tearing down stale mount %s", path.c_str());
-        android::vold::ForceUnmount(path);
-    }
-
     return 0;
 }
 
diff --git a/main.cpp b/main.cpp
index 4301b2e..214abab 100644
--- a/main.cpp
+++ b/main.cpp
@@ -73,11 +73,6 @@ extern "C" int vold_main(int argc, char** argv) {
 
     parse_args(argc, argv);
 
-    sehandle = selinux_android_file_context_handle();
-    if (sehandle) {
-        selinux_android_set_sehandle(sehandle);
-    }
-
     // Quickly throw a CLOEXEC on the socket we just inherited from init
     fcntl(android_get_control_socket("vold"), F_SETFD, FD_CLOEXEC);
     fcntl(android_get_control_socket("cryptd"), F_SETFD, FD_CLOEXEC);
-- 
2.11.0

