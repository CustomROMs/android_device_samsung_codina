From 69ce673c458f0c83df80a0ff5ba7bbf3cff77cd4 Mon Sep 17 00:00:00 2001
From: Shilin Victor <radicaldreamer00001@gmail.com>
Date: Fri, 29 Mar 2019 22:55:20 +0300
Subject: [PATCH 12/20] 
 system-core_WW001-simpleperf-inspired-optimizations.patch

Change-Id: I04d81c85ed9a7b441535028c0f25d0e88a11e8d4
---
 logd/LogListener.cpp | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/logd/LogListener.cpp b/logd/LogListener.cpp
index b29f5ab92..4338f2519 100644
--- a/logd/LogListener.cpp
+++ b/logd/LogListener.cpp
@@ -44,7 +44,6 @@ bool LogListener::onDataAvailable(SocketClient *cli) {
     char buffer[sizeof_log_id_t + sizeof(uint16_t) + sizeof(log_time)
         + LOGGER_ENTRY_MAX_PAYLOAD];
     struct iovec iov = { buffer, sizeof(buffer) };
-    memset(buffer, 0, sizeof(buffer));
 
     char control[CMSG_SPACE(sizeof(struct ucred))];
     struct msghdr hdr = {
@@ -59,6 +58,9 @@ bool LogListener::onDataAvailable(SocketClient *cli) {
 
     int socket = cli->getSocket();
 
+    // To clear the entire buffer is secure/safe, but this contributes to 1.68%
+    // overhead under logging load. We are safe because we check counts.
+    // memset(buffer, 0, sizeof(buffer));
     ssize_t n = recvmsg(socket, &hdr, 0);
     if (n <= (ssize_t)(sizeof(android_log_header_t))) {
         return false;
-- 
2.11.0

