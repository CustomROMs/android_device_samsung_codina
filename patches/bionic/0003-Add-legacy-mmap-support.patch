From 86223b9d40213ece4000b0d62343c18733f29e6e Mon Sep 17 00:00:00 2001
From: Flemmard <flemmard@gmail.com>
Date: Thu, 13 Nov 2014 00:12:22 +0100
Subject: [PATCH 3/8] Add legacy mmap support

  flag BOARD_USES_LEGACY_MMAP
* Pre-lollipop mmap would not care whether offset was signed
  or unsigned.
* Lollipop adds 64-bit support which results in sign extension
  of offset, causing a negative offset when
  a positive offset > 2^31 is given.

Change-Id: I4a28ddd153ca2b12a03916a9b1ff7651ef0c90e2
---
 libc/Android.bp      | 2 +-
 libc/bionic/mmap.cpp | 7 ++++++-
 2 files changed, 7 insertions(+), 2 deletions(-)

diff --git a/libc/Android.bp b/libc/Android.bp
index e6669469e..2397d5685 100644
--- a/libc/Android.bp
+++ b/libc/Android.bp
@@ -1476,7 +1476,7 @@ cc_library_static {
         },
     },
     whole_static_libs: ["libsystemproperties"],
-    cppflags: ["-Wold-style-cast"],
+    cppflags: ["-Wold-style-cast", "-DLEGACY_MMAP"],
     local_include_dirs: ["stdio"],
     include_dirs: ["bionic/libstdc++/include"],
     name: "libc_bionic_ndk",
diff --git a/libc/bionic/mmap.cpp b/libc/bionic/mmap.cpp
index 35033199a..e646139d8 100644
--- a/libc/bionic/mmap.cpp
+++ b/libc/bionic/mmap.cpp
@@ -38,6 +38,11 @@
 extern "C" void*  __mmap2(void*, size_t, int, int, int, size_t);
 
 #define MMAP2_SHIFT 12 // 2**12 == 4096
+#ifdef LEGACY_MMAP
+#define TO_64(a) ((a) & 0x00000000ffffffff)
+#else
+#define TO_64(a) (a)
+#endif
 
 static bool kernel_has_MADV_MERGEABLE = true;
 
@@ -73,5 +78,5 @@ void* mmap64(void* addr, size_t size, int prot, int flags, int fd, off64_t offse
 }
 
 void* mmap(void* addr, size_t size, int prot, int flags, int fd, off_t offset) {
-  return mmap64(addr, size, prot, flags, fd, static_cast<off64_t>(offset));
+  return mmap64(addr, size, prot, flags, fd, TO_64(static_cast<off64_t>(offset)));
 }
-- 
2.11.0

