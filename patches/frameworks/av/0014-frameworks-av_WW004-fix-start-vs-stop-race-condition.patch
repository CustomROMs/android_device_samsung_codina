From f68c83a858559cb555529ec5b482234fbadb64ad Mon Sep 17 00:00:00 2001
From: Shilin Victor <radicaldreamer00001@gmail.com>
Date: Fri, 29 Mar 2019 22:51:38 +0300
Subject: [PATCH 14/45] 
 frameworks-av_WW004-fix-start-vs-stop-race-condition.patch

Change-Id: I8316286b60decfa6d122395b1a6f76874be492e3
---
 media/libstagefright/MPEG4Writer.cpp | 9 +++++++++
 1 file changed, 9 insertions(+)

diff --git a/media/libstagefright/MPEG4Writer.cpp b/media/libstagefright/MPEG4Writer.cpp
index 422fb57ee..623b7c490 100644
--- a/media/libstagefright/MPEG4Writer.cpp
+++ b/media/libstagefright/MPEG4Writer.cpp
@@ -104,6 +104,8 @@ private:
         kSampleArraySize = 1000,
     };
 
+    Mutex mLock;
+
     // A helper class to handle faster write box with table entries
     template<class TYPE>
     struct ListTableEntries {
@@ -1830,9 +1832,11 @@ status_t MPEG4Writer::startWriterThread() {
 
 
 status_t MPEG4Writer::Track::start(MetaData *params) {
+    mLock.lock();
     if (!mDone && mPaused) {
         mPaused = false;
         mResumed = true;
+        mLock.unlock();
         return OK;
     }
 
@@ -1883,6 +1887,7 @@ status_t MPEG4Writer::Track::start(MetaData *params) {
     status_t err = mSource->start(meta.get());
     if (err != OK) {
         mDone = mReachedEOS = true;
+        mLock.unlock();
         return err;
     }
 
@@ -1903,6 +1908,7 @@ status_t MPEG4Writer::Track::start(MetaData *params) {
 
     mHFRRatio = AVUtils::get()->HFRUtils().getHFRRatio(mMeta);
 
+    mLock.unlock();
     return OK;
 }
 
@@ -1912,6 +1918,7 @@ status_t MPEG4Writer::Track::pause() {
 }
 
 status_t MPEG4Writer::Track::stop() {
+    mLock.lock();
     ALOGD("Stopping %s track", mIsAudio? "Audio": "Video");
     if (!mStarted) {
         ALOGE("Stop() called but track is not started");
@@ -1919,6 +1926,7 @@ status_t MPEG4Writer::Track::stop() {
     }
 
     if (mDone) {
+        mLock.unlock();
         return OK;
     }
     mDone = true;
@@ -1940,6 +1948,7 @@ status_t MPEG4Writer::Track::stop() {
         ALOGE(" Filesize limit exceeded and zero samples written ");
         return ERROR_END_OF_STREAM;
     }
+    mLock.unlock();
     return err;
 }
 
-- 
2.11.0

