From 6445e843d6da68c13f9dde1dbadbf43cb98de164 Mon Sep 17 00:00:00 2001
From: Shilin Victor <chrono.monochrome@gmail.com>
Date: Wed, 19 Sep 2018 07:23:02 +0300
Subject: [PATCH 27/67] audiopolicy: return NO_ERROR to silence log spamming

Change-Id: Id3ff9766faac45a6bd6012aa74e9c9fa30640484
---
 .../service/AudioPolicyInterfaceImplLegacy.cpp     | 36 +++++++++++-----------
 1 file changed, 18 insertions(+), 18 deletions(-)

diff --git a/services/audiopolicy/service/AudioPolicyInterfaceImplLegacy.cpp b/services/audiopolicy/service/AudioPolicyInterfaceImplLegacy.cpp
index 5e72bf7dd..fe6316ecb 100644
--- a/services/audiopolicy/service/AudioPolicyInterfaceImplLegacy.cpp
+++ b/services/audiopolicy/service/AudioPolicyInterfaceImplLegacy.cpp
@@ -72,7 +72,7 @@ status_t AudioPolicyService::handleDeviceConfigChange(audio_devices_t device,
                                                   const char *device_name)
 {
     ALOGE("handleDeviceConfigChange()");
-    return INVALID_OPERATION;
+    return NO_ERROR;
 }
 
 status_t AudioPolicyService::setPhoneState(audio_mode_t state)
@@ -562,23 +562,23 @@ status_t AudioPolicyService::listAudioPorts(audio_port_role_t role __unused,
                                             unsigned int *generation __unused)
 {
     *num_ports = 0;
-    return INVALID_OPERATION;
+    return NO_ERROR;
 }
 
 status_t AudioPolicyService::getAudioPort(struct audio_port *port __unused)
 {
-    return INVALID_OPERATION;
+    return NO_ERROR;
 }
 
 status_t AudioPolicyService::createAudioPatch(const struct audio_patch *patch __unused,
         audio_patch_handle_t *handle __unused)
 {
-    return INVALID_OPERATION;
+    return NO_ERROR;
 }
 
 status_t AudioPolicyService::releaseAudioPatch(audio_patch_handle_t handle __unused)
 {
-    return INVALID_OPERATION;
+    return NO_ERROR;
 }
 
 status_t AudioPolicyService::listAudioPatches(unsigned int *num_patches,
@@ -586,12 +586,12 @@ status_t AudioPolicyService::listAudioPatches(unsigned int *num_patches,
         unsigned int *generation __unused)
 {
     *num_patches = 0;
-    return INVALID_OPERATION;
+    return NO_ERROR;
 }
 
 status_t AudioPolicyService::setAudioPortConfig(const struct audio_port_config *config __unused)
 {
-    return INVALID_OPERATION;
+    return NO_ERROR;
 }
 
 /*    uint32_t sample_rate;
@@ -630,59 +630,59 @@ status_t AudioPolicyService::acquireSoundTriggerSession(audio_session_t *session
                                        audio_io_handle_t *ioHandle __unused,
                                        audio_devices_t *device __unused)
 {
-    return INVALID_OPERATION;
+    return NO_ERROR;
 }
 
 status_t AudioPolicyService::releaseSoundTriggerSession(audio_session_t session __unused)
 {
-    return INVALID_OPERATION;
+    return NO_ERROR;
 }
 
 status_t AudioPolicyService::registerPolicyMixes(const Vector<AudioMix>& mixes __unused,
                                                  bool registration __unused)
 {
-    return INVALID_OPERATION;
+    return NO_ERROR;
 }
 
 status_t AudioPolicyService::startAudioSource(const struct audio_port_config *source,
                                   const audio_attributes_t *attributes,
                                   audio_patch_handle_t *handle)
 {
-    return INVALID_OPERATION;
+    return NO_ERROR;
 }
 
 status_t AudioPolicyService::stopAudioSource(audio_patch_handle_t handle)
 {
-    return INVALID_OPERATION;
+    return NO_ERROR;
 }
 
 status_t AudioPolicyService::setMasterMono(bool mono)
 {
-    return INVALID_OPERATION;
+    return NO_ERROR;
 }
 
 status_t AudioPolicyService::getMasterMono(bool *mono)
 {
-    return INVALID_OPERATION;
+    return NO_ERROR;
 }
 
 float AudioPolicyService::getStreamVolumeDB(
             audio_stream_type_t stream, int index, audio_devices_t device)
 {
-    return INVALID_OPERATION;
+    return NO_ERROR;
 }
 
 #if 0
 status_t AudioPolicyService::listAudioSessions(audio_stream_type_t streams,
                                                Vector< sp<AudioSessionInfo>> &sessions)
 {
-    return INVALID_OPERATION;
+    return NO_ERROR;
 }
 #endif
 
 status_t AudioPolicyService::setSurroundFormatEnabled(audio_format_t audioFormat __unused, bool enabled __unused)
 {
-    return INVALID_OPERATION;
+    return NO_ERROR;
 }
 
 status_t AudioPolicyService::getSurroundFormats(unsigned int *numSurroundFormats __unused,
@@ -690,7 +690,7 @@ status_t AudioPolicyService::getSurroundFormats(unsigned int *numSurroundFormats
                                         bool *surroundFormatsEnabled __unused,
                                         bool reported __unused)
 {
-    return INVALID_OPERATION;
+    return NO_ERROR;
 }
 
 }; // namespace android
-- 
2.11.0

