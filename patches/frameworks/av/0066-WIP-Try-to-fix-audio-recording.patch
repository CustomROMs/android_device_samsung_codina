From 66417eca90581fa499816d4b499115f9125b17d6 Mon Sep 17 00:00:00 2001
From: Shilin Victor <chrono.monochrome@gmail.com>
Date: Mon, 1 Oct 2018 09:51:28 +0300
Subject: [PATCH 66/67] [WIP] Try to fix audio recording

Change-Id: I3972359f693f13aac0022370655b39abb0c0e57a
---
 .../colorconversion/ColorConverter.cpp             | 36 +++++++---------------
 services/audioflinger/AudioFlinger.cpp             |  6 ++--
 services/audioflinger/Threads.cpp                  | 21 +++++--------
 services/audioflinger/Tracks.cpp                   |  6 ++--
 4 files changed, 25 insertions(+), 44 deletions(-)

diff --git a/media/libstagefright/colorconversion/ColorConverter.cpp b/media/libstagefright/colorconversion/ColorConverter.cpp
index 06b963790..58452e494 100644
--- a/media/libstagefright/colorconversion/ColorConverter.cpp
+++ b/media/libstagefright/colorconversion/ColorConverter.cpp
@@ -174,6 +174,7 @@ status_t ColorConverter::convert(
     }
 
     status_t err;
+    ALOGE("%s: mSrcFormat = %d", __func__, mSrcFormat);
 
     switch (mSrcFormat) {
         case OMX_COLOR_FormatYUV420Planar:
@@ -215,6 +216,7 @@ status_t ColorConverter::convert(
 
 #ifdef STE_HARDWARE
         case OMX_STE_COLOR_FormatYUV420PackedSemiPlanarMB:
+            ALOGE("%s: mSrcFormat = OMX_STE_COLOR_FormatYUV420PackedSemiPlanarMB", __func__);
             err = convertSTEYUV420PackedSemiPlanarMB(src, dst);
             break;
 #endif
@@ -1004,36 +1006,20 @@ status_t ColorConverter::convertSTEYUV420PackedSemiPlanarMB(
                         cr[2] = cr[3] = ((chromaWord1 >> 24) & 0xff);
 
                         for (i = 0; i < 4; i++) {
-                            int32_t rW,gW,bW;
+                            int32_t rW, gW, bW;
 
                             rW = 298 * y[i] + 408 * cr[i] - 57059;
                             gW = 298 * y[i] - 100 * cb[i] - 208 * cr[i] + 34713;
                             bW = 298 * y[i] + 516 * cb[i] - 70887;
 
-                            if (rW < 0) {
-                                r[i] = 0;
-                            } else if (rW >= 65536) {
-                                r[i] = 255;
-                            } else {
-                                r[i] = (rW >> 8);
-                            }
-                            if (gW < 0) {
-                                g[i] = 0;
-                            } else if (gW >= 65536) {
-                                g[i] = 255;
-                            } else {
-                                g[i] = (gW >> 8);
-                            }
-                            if (bW < 0) {
-                                b[i] = 0;
-                            } else if (bW >= 65536) {
-                                b[i] = 255;
-                            } else {
-                                b[i] = (bW >> 8);
-                            }
-                            r[i] >>= 3;
-                            g[i] >>= 2;
-                            b[i] >>= 3;
+                            if (rW < 0) r[i] = 0;
+                            else r[i] = (rW >> 11) & 0xff;
+
+                            if (gW < 0) g[i] = 0;
+                            else g[i] = (gW >> 10) & 0xff;
+
+                            if (bW < 0) b[i] = 0;
+                            else b[i] = (bW >> 11) & 0xff;
                         }
                         for (i = 0; i < 4; i += 2) {
                             // Check for cropping on the x axis
diff --git a/services/audioflinger/AudioFlinger.cpp b/services/audioflinger/AudioFlinger.cpp
index 41b0b820f..41165816a 100644
--- a/services/audioflinger/AudioFlinger.cpp
+++ b/services/audioflinger/AudioFlinger.cpp
@@ -343,7 +343,7 @@ status_t AudioFlinger::openMmapStream(MmapStreamInterface::stream_direction_t di
         if (direction == MmapStreamInterface::DIRECTION_OUTPUT) {
             AudioSystem::releaseOutput(io, streamType, actualSessionId);
         } else {
-            AudioSystem::releaseInput(portId);
+            AudioSystem::releaseInput(io);
         }
         ret = NO_INIT;
     }
@@ -1688,7 +1688,7 @@ sp<media::IAudioRecord> AudioFlinger::createRecord(const CreateRecordInput& inpu
     // release previously opened input if retrying.
     if (output.inputId != AUDIO_IO_HANDLE_NONE) {
         recordTrack.clear();
-        AudioSystem::releaseInput(portId);
+        AudioSystem::releaseInput(output.inputId);
         output.inputId = AUDIO_IO_HANDLE_NONE;
         output.selectedDeviceId = input.selectedDeviceId;
         portId = AUDIO_PORT_HANDLE_NONE;
@@ -1767,7 +1767,7 @@ Exit:
         }
         recordTrack.clear();
         if (output.inputId != AUDIO_IO_HANDLE_NONE) {
-            AudioSystem::releaseInput(portId);
+            AudioSystem::releaseInput(output.inputId);
         }
     }
 
diff --git a/services/audioflinger/Threads.cpp b/services/audioflinger/Threads.cpp
index 5707e0a4a..260cbcc0b 100644
--- a/services/audioflinger/Threads.cpp
+++ b/services/audioflinger/Threads.cpp
@@ -3346,8 +3346,6 @@ bool AudioFlinger::PlaybackThread::threadLoop()
 
             mActiveTracks.updatePowerState(this);
 
-            updateMetadata_l();
-
             // prevent any changes in effect chain list and in each effect chain
             // during mixing and effect process as the audio buffers could be deleted
             // or modified if an effect is created or deleted
@@ -6532,8 +6530,6 @@ reacquire_wakelock:
 
             mActiveTracks.updatePowerState(this);
 
-            updateMetadata_l();
-
             if (allStopped) {
                 standbyIfNotAlreadyInStandby();
             }
@@ -7125,7 +7121,8 @@ status_t AudioFlinger::RecordThread::start(RecordThread::RecordTrack* recordTrac
         if (recordTrack->isExternalTrack()) {
             mLock.unlock();
             bool silenced;
-            status = AudioSystem::startInput(recordTrack->portId(), &silenced);
+            status = AudioSystem::startInput(mId, &silenced);
+
             mLock.lock();
             // FIXME should verify that recordTrack is still in mActiveTracks
             if (status != NO_ERROR) {
@@ -7157,7 +7154,7 @@ status_t AudioFlinger::RecordThread::start(RecordThread::RecordTrack* recordTrac
 
 startError:
     if (recordTrack->isExternalTrack()) {
-        AudioSystem::stopInput(recordTrack->portId());
+        AudioSystem::stopInput(mId);
     }
     recordTrack->clearSyncStartEvent();
     // FIXME I wonder why we do not reset the state here?
@@ -7965,7 +7962,7 @@ void AudioFlinger::MmapThread::disconnect()
     if (isOutput()) {
         AudioSystem::releaseOutput(mId, streamType(), mSessionId);
     } else {
-        AudioSystem::releaseInput(mPortId);
+        AudioSystem::releaseInput(mId);
     }
 }
 
@@ -8079,7 +8076,7 @@ status_t AudioFlinger::MmapThread::start(const AudioClient& client,
     if (isOutput()) {
         ret = AudioSystem::startOutput(mId, streamType(), mSessionId);
     } else {
-        ret = AudioSystem::startInput(portId, &silenced);
+        ret = AudioSystem::startInput(mId, &silenced);
     }
 
     Mutex::Autolock _l(mLock);
@@ -8091,7 +8088,7 @@ status_t AudioFlinger::MmapThread::start(const AudioClient& client,
             if (isOutput()) {
                 AudioSystem::releaseOutput(mId, streamType(), mSessionId);
             } else {
-                AudioSystem::releaseInput(portId);
+                AudioSystem::releaseInput(mId);
             }
             mLock.lock();
         } else {
@@ -8164,8 +8161,8 @@ status_t AudioFlinger::MmapThread::stop(audio_port_handle_t handle)
         AudioSystem::stopOutput(mId, streamType(), track->sessionId());
         AudioSystem::releaseOutput(mId, streamType(), track->sessionId());
     } else {
-        AudioSystem::stopInput(track->portId());
-        AudioSystem::releaseInput(track->portId());
+        AudioSystem::stopInput(mId);
+        AudioSystem::releaseInput(mId);
     }
     mLock.lock();
 
@@ -8252,8 +8249,6 @@ bool AudioFlinger::MmapThread::threadLoop()
 
         mActiveTracks.updatePowerState(this);
 
-        updateMetadata_l();
-
         lockEffectChains_l(effectChains);
         for (size_t i = 0; i < effectChains.size(); i ++) {
             effectChains[i]->process_l();
diff --git a/services/audioflinger/Tracks.cpp b/services/audioflinger/Tracks.cpp
index a7c425356..f72886edd 100644
--- a/services/audioflinger/Tracks.cpp
+++ b/services/audioflinger/Tracks.cpp
@@ -1746,7 +1746,7 @@ void AudioFlinger::RecordThread::RecordTrack::stop()
     if (thread != 0) {
         RecordThread *recordThread = (RecordThread *)thread.get();
         if (recordThread->stop(this) && isExternalTrack()) {
-            AudioSystem::stopInput(mPortId);
+            AudioSystem::stopInput(mThreadIoHandle);
         }
     }
 }
@@ -1758,9 +1758,9 @@ void AudioFlinger::RecordThread::RecordTrack::destroy()
     {
         if (isExternalTrack()) {
             if (mState == ACTIVE || mState == RESUMING) {
-                AudioSystem::stopInput(mPortId);
+                AudioSystem::stopInput(mThreadIoHandle);
             }
-            AudioSystem::releaseInput(mPortId);
+            AudioSystem::releaseInput(mThreadIoHandle);
         }
         sp<ThreadBase> thread = mThread.promote();
         if (thread != 0) {
-- 
2.11.0

