From ac97bbaee2ce0d9dbba073c97b42cc2edaa0c394 Mon Sep 17 00:00:00 2001
From: Shilin Victor <chrono.monochrome@gmail.com>
Date: Sun, 27 May 2018 22:17:01 +0300
Subject: [PATCH 65/67] STE: fix video recording

Change-Id: I6b0886bde34011968766f11a62625d76f0017dc4
---
 media/libstagefright/ACodec.cpp    | 32 ++++++++++++++++++++++++++------
 media/libstagefright/OMXClient.cpp | 12 ++++++------
 2 files changed, 32 insertions(+), 12 deletions(-)

diff --git a/media/libstagefright/ACodec.cpp b/media/libstagefright/ACodec.cpp
index f07f2dd88..05627d542 100755
--- a/media/libstagefright/ACodec.cpp
+++ b/media/libstagefright/ACodec.cpp
@@ -887,6 +887,8 @@ status_t ACodec::allocateBuffersOnPort(OMX_U32 portIndex) {
         if (err == OK) {
             const IOMX::PortMode &mode = mPortMode[portIndex];
             size_t bufSize = def.nBufferSize;
+            ALOGI("%s: input (%d), mode = %d", __func__, portIndex == kPortIndexInput, mode);
+
             // Always allocate VideoNativeMetadata if using ANWBuffer.
             // OMX might use gralloc source internally, but we don't share
             // metadata buffer with OMX, OMX has its own headers.
@@ -1834,10 +1836,14 @@ status_t ACodec::configureCodec(
             return BAD_VALUE;
         }
 
+#ifndef STE_HARDWARE
         err = setPortMode(kPortIndexInput, mode);
         if (err != OK) {
             return err;
         }
+#else
+        err = OK;
+#endif
 
         uint32_t usageBits;
         if (mOMXNode->getParameter(
@@ -1883,17 +1889,17 @@ status_t ACodec::configureCodec(
             enable = OMX_TRUE;
         }
 
-#ifdef METADATA_CAMERA_SOURCE
+#ifndef STE_HARDWARE
         err = setPortMode(kPortIndexOutput, IOMX::kPortModeDynamicNativeHandle);
-#else
-        err = setPortMode(kPortIndexOutput, enable ?
-                IOMX::kPortModePresetSecureBuffer : IOMX::kPortModePresetByteBuffer);
-#endif
+
         if (err != OK) {
             ALOGE("[%s] storeMetaDataInBuffers (output) failed w/ err %d",
                 mComponentName.c_str(), err);
             //return err;
         }
+#else
+        err = OK;
+#endif
 
         if (!msg->findInt64(
                     "repeat-previous-frame-after",
@@ -6653,7 +6659,21 @@ ACodec::LoadedState::LoadedState(ACodec *codec)
 }
 
 void ACodec::LoadedState::stateEntered() {
-    ALOGV("[%s] Now Loaded", mCodec->mComponentName.c_str());
+    ALOGI("[%s] Now Loaded", mCodec->mComponentName.c_str());
+
+#ifdef STE_HARDWARE
+    status_t err;
+    IOMX::PortMode mode = IOMX::kPortModeDynamicANWBuffer;
+
+    if (!mCodec->mComponentName.compare("OMX.ST.VFM.MPEG4Enc") ||
+        !mCodec->mComponentName.compare("OMX.ST.VFM.H264Enc")) {
+        ALOGI("%s: chrono: storing metadata before idle", mCodec->mComponentName.c_str());
+        err = mCodec->mOMXNode->setPortMode(kPortIndexInput, mode);
+
+        if (err != OK)
+            ALOGE("Storing meta data in video buffers is not supported");
+    }
+#endif
 
     mCodec->mPortEOS[kPortIndexInput] =
         mCodec->mPortEOS[kPortIndexOutput] = false;
diff --git a/media/libstagefright/OMXClient.cpp b/media/libstagefright/OMXClient.cpp
index 5f50e46c3..66c5fd994 100644
--- a/media/libstagefright/OMXClient.cpp
+++ b/media/libstagefright/OMXClient.cpp
@@ -25,7 +25,7 @@
 #include <cutils/properties.h>
 
 #include <binder/IServiceManager.h>
-#include <media/IMediaCodecService.h>
+#include <media/IMediaPlayerService.h>
 #include <media/stagefright/OMXClient.h>
 
 #include <media/IOMX.h>
@@ -69,15 +69,15 @@ status_t OMXClient::connect(const char* name, bool* trebleFlag) {
 
 status_t OMXClient::connectLegacy() {
     sp<IServiceManager> sm = defaultServiceManager();
-    sp<IBinder> codecbinder = sm->getService(String16("media.codec"));
-    sp<IMediaCodecService> codecservice = interface_cast<IMediaCodecService>(codecbinder);
+    sp<IBinder> binder = sm->getService(String16("media.player"));
+    sp<IMediaPlayerService> service = interface_cast<IMediaPlayerService>(binder);
 
-    if (codecservice.get() == NULL) {
-        ALOGE("Cannot obtain IMediaCodecService");
+    if (service.get() == NULL) {
+        ALOGE("Cannot obtain IMediaPlayerService");
         return NO_INIT;
     }
 
-    mOMX = codecservice->getOMX();
+    mOMX = service->getOMX();
     if (mOMX.get() == NULL) {
         ALOGE("Cannot obtain mediacodec IOMX");
         return NO_INIT;
-- 
2.11.0

