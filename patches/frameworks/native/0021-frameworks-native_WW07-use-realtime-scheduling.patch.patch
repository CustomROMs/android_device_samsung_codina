From 33d78a4bbaa36b02daf59aae8f26b33ed71590b3 Mon Sep 17 00:00:00 2001
From: Shilin Victor <radicaldreamer00001@gmail.com>
Date: Fri, 29 Mar 2019 22:51:46 +0300
Subject: [PATCH 21/30] frameworks-native_WW07-use-realtime-scheduling.patch

Change-Id: I41283b195b9d9d70cb1e214bd259b4d3f2f135e1
---
 services/inputflinger/InputManager.cpp          | 4 ++--
 services/surfaceflinger/SurfaceFlinger.cpp      | 2 +-
 services/surfaceflinger/main_surfaceflinger.cpp | 4 +---
 3 files changed, 4 insertions(+), 6 deletions(-)

diff --git a/services/inputflinger/InputManager.cpp b/services/inputflinger/InputManager.cpp
index 6a6547bdf..1fead9197 100644
--- a/services/inputflinger/InputManager.cpp
+++ b/services/inputflinger/InputManager.cpp
@@ -51,13 +51,13 @@ void InputManager::initialize() {
 }
 
 status_t InputManager::start() {
-    status_t result = mDispatcherThread->run("InputDispatcher", PRIORITY_URGENT_DISPLAY);
+    status_t result = mDispatcherThread->run("InputDispatcher", PRIORITY_REALTIME);
     if (result) {
         ALOGE("Could not start InputDispatcher thread due to error %d.", result);
         return result;
     }
 
-    result = mReaderThread->run("InputReader", PRIORITY_URGENT_DISPLAY);
+    result = mReaderThread->run("InputReader", PRIORITY_REALTIME);
     if (result) {
         ALOGE("Could not start InputReader thread due to error %d.", result);
 
diff --git a/services/surfaceflinger/SurfaceFlinger.cpp b/services/surfaceflinger/SurfaceFlinger.cpp
index 74b1367cb..32d8a49ec 100644
--- a/services/surfaceflinger/SurfaceFlinger.cpp
+++ b/services/surfaceflinger/SurfaceFlinger.cpp
@@ -544,7 +544,7 @@ void SurfaceFlinger::init() {
     getDefaultDisplayDevice()->makeCurrent(mEGLDisplay, mEGLContext);
 
     mEventControlThread = new EventControlThread(this);
-    mEventControlThread->run("EventControl", PRIORITY_URGENT_DISPLAY);
+    mEventControlThread->run("EventControl", PRIORITY_REALTIME);
 
     // set a fake vsync period if there is no HWComposer
     if (mHwc->initCheck() != NO_ERROR) {
diff --git a/services/surfaceflinger/main_surfaceflinger.cpp b/services/surfaceflinger/main_surfaceflinger.cpp
index e8464a37d..728430efb 100644
--- a/services/surfaceflinger/main_surfaceflinger.cpp
+++ b/services/surfaceflinger/main_surfaceflinger.cpp
@@ -38,9 +38,7 @@ int main(int, char**) {
     // instantiate surfaceflinger
     sp<SurfaceFlinger> flinger = DisplayUtils::getInstance()->getSFInstance();
 
-    setpriority(PRIO_PROCESS, 0, PRIORITY_URGENT_DISPLAY);
-
-    set_sched_policy(0, SP_FOREGROUND);
+    setpriority(PRIO_PROCESS, 0, PRIORITY_REALTIME);
 
 #ifdef ENABLE_CPUSETS
     // Put most SurfaceFlinger threads in the system-background cpuset
-- 
2.11.0

