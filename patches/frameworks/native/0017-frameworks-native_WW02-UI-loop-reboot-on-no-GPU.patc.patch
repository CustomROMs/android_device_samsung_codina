From 21f2fc29748e2c050a4267b92159736cb494d276 Mon Sep 17 00:00:00 2001
From: Shilin Victor <radicaldreamer00001@gmail.com>
Date: Fri, 29 Mar 2019 22:51:46 +0300
Subject: [PATCH 17/30] frameworks-native_WW02-UI-loop-reboot-on-no-GPU.patch

Change-Id: Iaf1446be5075ab9ad8152e3d6f6e1ceeb22b46e5
---
 opengl/libagl/egl.cpp                              | 32 +++++++++++++++++++++-
 .../surfaceflinger/RenderEngine/RenderEngine.h     |  2 +-
 2 files changed, 32 insertions(+), 2 deletions(-)

diff --git a/opengl/libagl/egl.cpp b/opengl/libagl/egl.cpp
index 593d0c2d0..4236ef40c 100644
--- a/opengl/libagl/egl.cpp
+++ b/opengl/libagl/egl.cpp
@@ -1682,11 +1682,41 @@ EGLBoolean eglQuerySurface( EGLDisplay dpy, EGLSurface eglSurface,
 }
 
 EGLContext eglCreateContext(EGLDisplay dpy, EGLConfig config,
-                            EGLContext /*share_list*/, const EGLint* /*attrib_list*/)
+                            EGLContext /*share_list*/, const EGLint* attrib_list)
 {
     if (egl_display_t::is_valid(dpy) == EGL_FALSE)
         return setError(EGL_BAD_DISPLAY, EGL_NO_SURFACE);
 
+    EGLint renderType = 0;
+    if (getConfigAttrib(dpy, config, EGL_RENDERABLE_TYPE, &renderType) == EGL_FALSE) {
+        return setError(EGL_BAD_CONFIG, EGL_NO_SURFACE);
+    }
+
+    EGLint major = 1;
+    if (attrib_list != NULL) {
+        for (EGLint i=0; attrib_list[i]!= EGL_NONE; i+=2) {
+            if (attrib_list[i] == EGL_CONTEXT_CLIENT_VERSION) {
+                major = attrib_list[i+1];
+                break;
+            }
+        }
+    }
+
+    switch (major) {
+        case 1:
+            if (!(renderType & EGL_OPENGL_ES_BIT)) {
+                return setError(EGL_BAD_MATCH, EGL_NO_SURFACE);
+            }
+            break;
+        case 2:
+            if (!(renderType & EGL_OPENGL_ES2_BIT)) {
+                return setError(EGL_BAD_MATCH, EGL_NO_SURFACE);
+            }
+            break;
+        default:
+            return setError(EGL_BAD_MATCH, EGL_NO_SURFACE);
+    }
+
     ogles_context_t* gl = ogles_init(sizeof(egl_context_t));
     if (!gl) return setError(EGL_BAD_ALLOC, EGL_NO_CONTEXT);
 
diff --git a/services/surfaceflinger/RenderEngine/RenderEngine.h b/services/surfaceflinger/RenderEngine/RenderEngine.h
index a669fdd83..9fdb709cc 100644
--- a/services/surfaceflinger/RenderEngine/RenderEngine.h
+++ b/services/surfaceflinger/RenderEngine/RenderEngine.h
@@ -26,7 +26,7 @@
 #include <ui/mat4.h>
 #include <Transform.h>
 
-#define EGL_NO_CONFIG ((EGLConfig)0)
+#define EGL_NO_CONFIG ((EGLConfig)-1)
 
 // ---------------------------------------------------------------------------
 namespace android {
-- 
2.11.0

