From e5cb4aeaf1d7614841b35c825c7373025db31ea7 Mon Sep 17 00:00:00 2001
From: Shilin Victor <chrono.monochrome@gmail.com>
Date: Mon, 27 Aug 2018 00:40:36 +0300
Subject: [PATCH 1/4] STE: Fix HAL_PIXEL formats

Change-Id: I0555a17c795c18e5c65e80714b56ff49f6d2d868
---
 libs/nativewindow/AHardwareBuffer.cpp              | 37 ++++++++++++++++++++++
 .../nativewindow/include/android/hardware_buffer.h |  6 ++--
 libs/nativewindow/include/vndk/hardware_buffer.h   | 33 +++++++++++++------
 3 files changed, 64 insertions(+), 12 deletions(-)

diff --git a/libs/nativewindow/AHardwareBuffer.cpp b/libs/nativewindow/AHardwareBuffer.cpp
index 49ffc8f22..5ccfebb98 100644
--- a/libs/nativewindow/AHardwareBuffer.cpp
+++ b/libs/nativewindow/AHardwareBuffer.cpp
@@ -356,6 +356,30 @@ bool AHardwareBuffer_isValidPixelFormat(uint32_t format) {
             "HAL and AHardwareBuffer pixel format don't match");
     static_assert(HAL_PIXEL_FORMAT_YCBCR_422_I == AHARDWAREBUFFER_FORMAT_YCbCr_422_I,
             "HAL and AHardwareBuffer pixel format don't match");
+    static_assert(HAL_PIXEL_FORMAT_YCbCr_422_P == AHARDWAREBUFFER_FORMAT_YCbCr_422_P,
+            "HAL and AHardwareBuffer pixel format don't match");
+    static_assert(HAL_PIXEL_FORMAT_YCbCr_420_P == AHARDWAREBUFFER_FORMAT_YCbCr_420_P,
+            "HAL and AHardwareBuffer pixel format don't match");
+    static_assert(HAL_PIXEL_FORMAT_YCbCr_420_I == AHARDWAREBUFFER_FORMAT_YCbCr_420_I,
+            "HAL and AHardwareBuffer pixel format don't match");
+    static_assert(HAL_PIXEL_FORMAT_CbYCrY_422_I == AHARDWAREBUFFER_FORMAT_CbYCrY_422_I,
+            "HAL and AHardwareBuffer pixel format don't match");
+    static_assert(HAL_PIXEL_FORMAT_CbYCrY_420_I == AHARDWAREBUFFER_FORMAT_CbYCrY_420_I,
+            "HAL and AHardwareBuffer pixel format don't match");
+    static_assert(HAL_PIXEL_FORMAT_YCbCr_420_SP_TILED == AHARDWAREBUFFER_FORMAT_YCbCr_420_SP_TILED,
+            "HAL and AHardwareBuffer pixel format don't match");
+    static_assert(HAL_PIXEL_FORMAT_YCbCr_420_SP == AHARDWAREBUFFER_FORMAT_YCbCr_420_SP,
+            "HAL and AHardwareBuffer pixel format don't match");
+    static_assert(HAL_PIXEL_FORMAT_YCrCb_420_SP_TILED == AHARDWAREBUFFER_FORMAT_YCrCb_420_SP_TILED,
+            "HAL and AHardwareBuffer pixel format don't match");
+    static_assert(HAL_PIXEL_FORMAT_YCrCb_422_SP == AHARDWAREBUFFER_FORMAT_YCrCb_422_SP,
+            "HAL and AHardwareBuffer pixel format don't match");
+    static_assert(HAL_PIXEL_FORMAT_YCrCb_422_P == AHARDWAREBUFFER_FORMAT_YCrCb_422_P,
+            "HAL and AHardwareBuffer pixel format don't match");
+    static_assert(HAL_PIXEL_FORMAT_YCrCb_420_P == AHARDWAREBUFFER_FORMAT_YCrCb_420_P,
+            "HAL and AHardwareBuffer pixel format don't match");
+    static_assert(HAL_PIXEL_FORMAT_YCBCR42XMBN == AHARDWAREBUFFER_FORMAT_YCBCR42XMBN,
+            "HAL and AHardwareBuffer pixel format don't match");
 
     switch (format) {
         case AHARDWAREBUFFER_FORMAT_R8G8B8A8_UNORM:
@@ -385,6 +409,19 @@ bool AHardwareBuffer_isValidPixelFormat(uint32_t format) {
         case AHARDWAREBUFFER_FORMAT_YCbCr_422_SP:
         case AHARDWAREBUFFER_FORMAT_YCrCb_420_SP:
         case AHARDWAREBUFFER_FORMAT_YCbCr_422_I:
+        case AHARDWAREBUFFER_FORMAT_YCbCr_422_P:
+        case AHARDWAREBUFFER_FORMAT_YCbCr_420_P:
+        case AHARDWAREBUFFER_FORMAT_YCbCr_420_I:
+        case AHARDWAREBUFFER_FORMAT_CbYCrY_422_I:
+        case AHARDWAREBUFFER_FORMAT_CbYCrY_420_I:
+        case AHARDWAREBUFFER_FORMAT_YCbCr_420_SP_TILED:
+        case AHARDWAREBUFFER_FORMAT_YCbCr_420_SP:
+        case AHARDWAREBUFFER_FORMAT_YCrCb_420_SP_TILED:
+        case AHARDWAREBUFFER_FORMAT_YCrCb_422_SP:
+        case AHARDWAREBUFFER_FORMAT_YCrCb_422_P:
+        case AHARDWAREBUFFER_FORMAT_YCrCb_420_P:
+        /* STE: Added Support of YUV42XMBN, required for Copybit CC acceleration */
+        case AHARDWAREBUFFER_FORMAT_YCBCR42XMBN:
             return true;
 
         default:
diff --git a/libs/nativewindow/include/android/hardware_buffer.h b/libs/nativewindow/include/android/hardware_buffer.h
index 78cec41b4..a53c5a08c 100644
--- a/libs/nativewindow/include/android/hardware_buffer.h
+++ b/libs/nativewindow/include/android/hardware_buffer.h
@@ -68,20 +68,20 @@ enum {
      *   Vulkan: VK_FORMAT_R16G16B16A16_SFLOAT
      *   OpenGL ES: GL_RGBA16F
      */
-    AHARDWAREBUFFER_FORMAT_R16G16B16A16_FLOAT       = 0x16,
+    AHARDWAREBUFFER_FORMAT_R16G16B16A16_FLOAT       = 46, // was 22
 
     /**
      * Corresponding formats:
      *   Vulkan: VK_FORMAT_A2B10G10R10_UNORM_PACK32
      *   OpenGL ES: GL_RGB10_A2
      */
-    AHARDWAREBUFFER_FORMAT_R10G10B10A2_UNORM        = 0x2b,
+    AHARDWAREBUFFER_FORMAT_R10G10B10A2_UNORM        = 45, // was 43
 
     /**
      * An opaque binary blob format that must have height 1, with width equal to
      * the buffer size in bytes.
      */
-    AHARDWAREBUFFER_FORMAT_BLOB                     = 0x21,
+    AHARDWAREBUFFER_FORMAT_BLOB                     = 47, // was 33
 
     /**
      * Corresponding formats:
diff --git a/libs/nativewindow/include/vndk/hardware_buffer.h b/libs/nativewindow/include/vndk/hardware_buffer.h
index 7a4b31f51..54c54e5cc 100644
--- a/libs/nativewindow/include/vndk/hardware_buffer.h
+++ b/libs/nativewindow/include/vndk/hardware_buffer.h
@@ -42,23 +42,38 @@ enum {
     /* same as HAL_PIXEL_FORMAT_Y16 */
     AHARDWAREBUFFER_FORMAT_Y16                      = 0x20363159,
     /* same as HAL_PIXEL_FORMAT_RAW16 */
-    AHARDWAREBUFFER_FORMAT_RAW16                    = 0x20,
+    AHARDWAREBUFFER_FORMAT_RAW16                    = 38, // was 32
     /* same as HAL_PIXEL_FORMAT_RAW10 */
-    AHARDWAREBUFFER_FORMAT_RAW10                    = 0x25,
+    AHARDWAREBUFFER_FORMAT_RAW10                    = 43, // was 37
     /* same as HAL_PIXEL_FORMAT_RAW12 */
-    AHARDWAREBUFFER_FORMAT_RAW12                    = 0x26,
+    AHARDWAREBUFFER_FORMAT_RAW12                    = 44, // was 38
     /* same as HAL_PIXEL_FORMAT_RAW_OPAQUE */
-    AHARDWAREBUFFER_FORMAT_RAW_OPAQUE               = 0x24,
+    AHARDWAREBUFFER_FORMAT_RAW_OPAQUE               = 42, // was 36
     /* same as HAL_PIXEL_FORMAT_IMPLEMENTATION_DEFINED */
-    AHARDWAREBUFFER_FORMAT_IMPLEMENTATION_DEFINED   = 0x22,
+    AHARDWAREBUFFER_FORMAT_IMPLEMENTATION_DEFINED   = 40, // was 34
     /* same as HAL_PIXEL_FORMAT_YCBCR_420_888 */
-    AHARDWAREBUFFER_FORMAT_Y8Cb8Cr8_420             = 0x23,
+    AHARDWAREBUFFER_FORMAT_Y8Cb8Cr8_420             = 41, // was 35
+#ifdef STE_HARDWARE
+    AHARDWAREBUFFER_FORMAT_YCbCr_422_P        = 18,
+    AHARDWAREBUFFER_FORMAT_YCbCr_420_P        = 19,
+    AHARDWAREBUFFER_FORMAT_YCbCr_420_I        = 21,
+    AHARDWAREBUFFER_FORMAT_CbYCrY_422_I       = 22,
+    AHARDWAREBUFFER_FORMAT_CbYCrY_420_I       = 23,
+    AHARDWAREBUFFER_FORMAT_YCbCr_420_SP_TILED = 32,
+    AHARDWAREBUFFER_FORMAT_YCbCr_420_SP       = 33,
+    AHARDWAREBUFFER_FORMAT_YCrCb_420_SP_TILED = 34,
+    AHARDWAREBUFFER_FORMAT_YCrCb_422_SP       = 35,
+    AHARDWAREBUFFER_FORMAT_YCrCb_422_P        = 36,
+    AHARDWAREBUFFER_FORMAT_YCrCb_420_P        = 37,
+    /* STE: Added Support of YUV42XMBN, required for Copybit CC acceleration */
+    AHARDWAREBUFFER_FORMAT_YCBCR42XMBN        = 14,
+#endif
     /* same as HAL_PIXEL_FORMAT_YCBCR_422_SP */
-    AHARDWAREBUFFER_FORMAT_YCbCr_422_SP             = 0x10,
+    AHARDWAREBUFFER_FORMAT_YCbCr_422_SP             = 16,
     /* same as HAL_PIXEL_FORMAT_YCRCB_420_SP */
-    AHARDWAREBUFFER_FORMAT_YCrCb_420_SP             = 0x11,
+    AHARDWAREBUFFER_FORMAT_YCrCb_420_SP             = 17,
     /* same as HAL_PIXEL_FORMAT_YCBCR_422_I */
-    AHARDWAREBUFFER_FORMAT_YCbCr_422_I              = 0x14,
+    AHARDWAREBUFFER_FORMAT_YCbCr_422_I              = 20,
 };
 
 __END_DECLS
-- 
2.11.0

