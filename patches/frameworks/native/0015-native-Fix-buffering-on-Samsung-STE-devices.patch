From ac679c992fa23ae6953c71b4f76ad25e58ea7c76 Mon Sep 17 00:00:00 2001
From: Shilin Victor <chrono.monochrome@gmail.com>
Date: Mon, 20 Aug 2018 22:57:43 +0300
Subject: [PATCH 15/24] native:Fix buffering on Samsung STE devices

We need to define the number of framebuffers this
way we eliminate any rip or screen tearing that
might occur.
---
 libs/ui/FramebufferNativeWindow.cpp          | 8 ++++++++
 libs/ui/include/ui/FramebufferNativeWindow.h | 8 ++++++++
 2 files changed, 16 insertions(+)

diff --git a/libs/ui/FramebufferNativeWindow.cpp b/libs/ui/FramebufferNativeWindow.cpp
index 59db15750..de5bf52f3 100644
--- a/libs/ui/FramebufferNativeWindow.cpp
+++ b/libs/ui/FramebufferNativeWindow.cpp
@@ -93,12 +93,16 @@ FramebufferNativeWindow::FramebufferNativeWindow()
         mUpdateOnDemand = (fbDev->setUpdateRect != 0);
 
         // initialize the buffer FIFO
+#ifdef STE_SAMSUNG_HARDWARE
+        mNumBuffers = NUM_FRAME_BUFFERS;
+#else
         if(fbDev->numFramebuffers >= MIN_NUM_FRAME_BUFFERS &&
            fbDev->numFramebuffers <= MAX_NUM_FRAME_BUFFERS){
             mNumBuffers = fbDev->numFramebuffers;
         } else {
             mNumBuffers = MIN_NUM_FRAME_BUFFERS;
         }
+#endif
         mNumFreeBuffers = mNumBuffers;
         mBufferHead = mNumBuffers-1;
 
@@ -244,7 +248,11 @@ int FramebufferNativeWindow::dequeueBuffer(ANativeWindow* window,
         self->mBufferHead = 0;
 
     // wait for a free non-front buffer
+#ifdef STE_SAMSUNG_HARDWARE
+    while (self->mNumFreeBuffers < NUM_FRAME_BUFFERS) {
+#else
     while (self->mNumFreeBuffers < 2) {
+#endif
         self->mCondition.wait(self->mutex);
     }
     ALOG_ASSERT(self->buffers[index] != self->front, "");
diff --git a/libs/ui/include/ui/FramebufferNativeWindow.h b/libs/ui/include/ui/FramebufferNativeWindow.h
index 4092e1cc4..97137c3b6 100644
--- a/libs/ui/include/ui/FramebufferNativeWindow.h
+++ b/libs/ui/include/ui/FramebufferNativeWindow.h
@@ -32,8 +32,12 @@
 #include <ui/ANativeObjectBase.h>
 #include <ui/Rect.h>
 
+#ifdef STE_SAMSUNG_HARDWARE
+#define NUM_FRAME_BUFFERS 3
+#else
 #define MIN_NUM_FRAME_BUFFERS  2
 #define MAX_NUM_FRAME_BUFFERS  3
+#endif
 
 extern "C" EGLNativeWindowType android_createDisplaySurface(void);
 
@@ -82,7 +86,11 @@ private:
     framebuffer_device_t* fbDev;
     alloc_device_t* grDev;
 
+#ifdef STE_SAMSUNG_HARDWARE
+    sp<NativeBuffer> buffers[NUM_FRAME_BUFFERS];
+#else
     sp<NativeBuffer> buffers[MAX_NUM_FRAME_BUFFERS];
+#endif
     sp<NativeBuffer> front;
 
     mutable Mutex mutex;
-- 
2.17.0

